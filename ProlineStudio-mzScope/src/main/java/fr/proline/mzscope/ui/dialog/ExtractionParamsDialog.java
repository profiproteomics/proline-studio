/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package fr.proline.mzscope.ui.dialog;

import fr.proline.mzscope.model.ExtractionParams;
import fr.proline.mzscope.model.MzScopePreferences;

/**
 *
 * @author CB205360
 */
public class ExtractionParamsDialog extends javax.swing.JDialog {
   
   private ExtractionParams extractionParams;

   /**
    * Creates new form ExtractionParamsDialog
     * @param parent
     * @param modal
    */
   public ExtractionParamsDialog(java.awt.Frame parent, boolean modal) {
      super(parent, modal);
      initComponents();
      toleranceTF.setText(Float.toString(MzScopePreferences.getInstance().getMzPPMTolerance()));
      getRootPane().setDefaultButton(okBtn);
   }
   
   public void setExtractionParamsTitle(String title) {
       this.setTitle(title);
   }

   public ExtractionParams getExtractionParams() {
      return extractionParams;
   }

   public void showExtractionParamsDialog() {
      setVisible(true);
   }
   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
    * content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel1 = new javax.swing.JLabel();
      toleranceTF = new javax.swing.JTextField();
      mzBoundsCB = new javax.swing.JCheckBox();
      jLabel2 = new javax.swing.JLabel();
      minMzTF = new javax.swing.JTextField();
      jLabel3 = new javax.swing.JLabel();
      maxMzTF = new javax.swing.JTextField();
      okBtn = new javax.swing.JButton();
      cancelBtn = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      jLabel1.setText("m/z tolerance (ppm):");

      toleranceTF.setText("5.0");

      mzBoundsCB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
      mzBoundsCB.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
      mzBoundsCB.setIconTextGap(25);
      mzBoundsCB.setLabel("enable m/z bounds");
      mzBoundsCB.setMargin(new java.awt.Insets(2, -1, 2, 2));
      mzBoundsCB.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            mzBoundsCBActionPerformed(evt);
         }
      });

      jLabel2.setText("minimum m/z:");

      minMzTF.setText("0.0");
      minMzTF.setEnabled(mzBoundsCB.isSelected());
      minMzTF.addFocusListener(new java.awt.event.FocusAdapter() {
         public void focusGained(java.awt.event.FocusEvent evt) {
            minMzTFFocusGained(evt);
         }
      });

      jLabel3.setText("maximum m/z:");

      maxMzTF.setText("0.0");
      maxMzTF.setEnabled(mzBoundsCB.isSelected());
      maxMzTF.addFocusListener(new java.awt.event.FocusAdapter() {
         public void focusGained(java.awt.event.FocusEvent evt) {
            maxMzTFFocusGained(evt);
         }
      });

      okBtn.setText("Ok");
      okBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            okBtnActionPerformed(evt);
         }
      });

      cancelBtn.setText("Cancel");
      cancelBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelBtnActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addComponent(okBtn)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(cancelBtn))
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(mzBoundsCB)
                     .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                           .addComponent(jLabel3)
                           .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                           .addComponent(maxMzTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                           .addComponent(jLabel2)
                           .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                           .addComponent(minMzTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                           .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                           .addComponent(toleranceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                  .addGap(0, 1, Short.MAX_VALUE)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(toleranceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(mzBoundsCB)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(minMzTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(maxMzTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(okBtn)
               .addComponent(cancelBtn))
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
      setVisible(false);
      this.extractionParams = new ExtractionParams();
      extractionParams.mzTolPPM = Float.parseFloat(toleranceTF.getText());
      extractionParams.minMz = (mzBoundsCB.isSelected()) ? Double.parseDouble(minMzTF.getText()) : 0.0;
      extractionParams.maxMz = (mzBoundsCB.isSelected()) ? Double.parseDouble(maxMzTF.getText()) : 0.0;
   }//GEN-LAST:event_okBtnActionPerformed

   private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
      this.extractionParams = null;
      setVisible(false);
   }//GEN-LAST:event_cancelBtnActionPerformed

   private void mzBoundsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mzBoundsCBActionPerformed
      minMzTF.setEnabled(mzBoundsCB.isSelected());
      minMzTF.requestFocusInWindow();
      maxMzTF.setEnabled(mzBoundsCB.isSelected());      
   }//GEN-LAST:event_mzBoundsCBActionPerformed

   private void minMzTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_minMzTFFocusGained
      minMzTF.selectAll();
   }//GEN-LAST:event_minMzTFFocusGained

   private void maxMzTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maxMzTFFocusGained
     maxMzTF.selectAll();
   }//GEN-LAST:event_maxMzTFFocusGained

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(ExtractionParamsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(ExtractionParamsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(ExtractionParamsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(ExtractionParamsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
        //</editor-fold>

      /* Create and display the dialog */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            ExtractionParamsDialog dialog = new ExtractionParamsDialog(new javax.swing.JFrame(), true);
            dialog.setExtractionParamsTitle("Extraction Parameters");
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
               @Override
               public void windowClosing(java.awt.event.WindowEvent e) {
                  System.exit(0);
               }
            });
            dialog.setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton cancelBtn;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JTextField maxMzTF;
   private javax.swing.JTextField minMzTF;
   private javax.swing.JCheckBox mzBoundsCB;
   private javax.swing.JButton okBtn;
   private javax.swing.JTextField toleranceTF;
   // End of variables declaration//GEN-END:variables
}
