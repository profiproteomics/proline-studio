/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.proline.studio.rsmexplorer.gui;

import fr.proline.core.om.model.msi.ProteinMatch;
import fr.proline.core.om.model.msi.ProteinSet;
import fr.proline.studio.rsmexplorer.gui.model.ProteinGroupTableModel;
import fr.proline.studio.rsmexplorer.gui.model.ProteinTableModel;
import org.jdesktop.swingx.JXTable;
import java.util.LinkedList;
import scala.Option;

/**
 *
 * @author JM235353
 */
public class ProteinGroupProteinSetPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProteinGroupProteinSetPanel
     */
    public ProteinGroupProteinSetPanel() {
        initComponents();
    }

    public void setData(ProteinSet proteinSet) {
        
        if (proteinSet == null) {
            clearData();
            return;
        }
        
        // retrieve typical protein
        Option<ProteinMatch> optionProteinMatch = proteinSet.typicalProteinMatch();
        ProteinMatch typicalProteinMatch = null;
        if ((optionProteinMatch!=null) && (optionProteinMatch.isDefined())) {
            typicalProteinMatch = optionProteinMatch.get();
        }
        
        if (typicalProteinMatch == null) {
            // should never happen
            clearData();
            return;
        } else {
            // look for proteins in same set and subset
            
            int nbPeptides = typicalProteinMatch.peptideMatchesCount();
            
            Option<ProteinMatch[]> optionProteinMatches =  proteinSet.proteinMatches();
            ProteinMatch[] proteinMatches = null;
            if ((optionProteinMatches!=null) && (optionProteinMatches.isDefined())) {
                proteinMatches = optionProteinMatches.get();
            }
            if (proteinMatches == null) {
                // should never happen
                clearData();
                return;
            }
                     
            
            LinkedList<ProteinMatch> sameSet = new LinkedList<ProteinMatch>();
            sameSet.add(typicalProteinMatch); // put typical protein match first.
            
            LinkedList<ProteinMatch> subSet = new LinkedList<ProteinMatch>();
            
            for (ProteinMatch proteinCur : proteinMatches) {
                if (proteinCur == typicalProteinMatch) {
                    // already put in the list
                    continue;
                }
                int nbPeptidesCur = proteinCur.peptideMatchesCount();
                if (nbPeptides == nbPeptidesCur) {
                    // ProteinMatch is in Same Set
                    sameSet.add(proteinCur);
                } else {
                    // ProteinMatch is in Sub Set
                    subSet.add(proteinCur);
                }
            }
            
            ProteinMatch[] sameSetArray = new ProteinMatch[sameSet.size()];
            sameSet.toArray(sameSetArray);
            ((ProteinTableModel)sameSetTable.getModel()).setData(sameSetArray);
            
            ProteinMatch[] subSetArray = new ProteinMatch[subSet.size()];
            subSet.toArray(subSetArray);
            ((ProteinTableModel)subSetTable.getModel()).setData(subSetArray);
            
        }
        
        
    }
    
    public void clearData() {
        ((ProteinTableModel) sameSetTable.getModel()).setData(null);
        ((ProteinTableModel) subSetTable.getModel()).setData(null);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proteinNameTextField = new javax.swing.JTextField();
        proteinSetTabbedPane = new javax.swing.JTabbedPane();
        sameSetScrollPane = new javax.swing.JScrollPane();
        sameSetTable = new JXTable();
        subSetScrollPane = new javax.swing.JScrollPane();
        subSetTable = new JXTable();

        proteinNameTextField.setText(org.openide.util.NbBundle.getMessage(ProteinGroupProteinSetPanel.class, "ProteinGroupProteinSetPanel.proteinNameTextField.text")); // NOI18N

        sameSetTable.setModel(new ProteinTableModel());
        sameSetScrollPane.setViewportView(sameSetTable);

        proteinSetTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ProteinGroupProteinSetPanel.class, "ProteinGroupProteinSetPanel.sameSetScrollPane.TabConstraints.tabTitle"), sameSetScrollPane); // NOI18N

        subSetTable.setModel(new ProteinTableModel());
        subSetScrollPane.setViewportView(subSetTable);

        proteinSetTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ProteinGroupProteinSetPanel.class, "ProteinGroupProteinSetPanel.subSetScrollPane.TabConstraints.tabTitle"), subSetScrollPane); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proteinSetTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(proteinNameTextField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(proteinNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(proteinSetTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField proteinNameTextField;
    private javax.swing.JTabbedPane proteinSetTabbedPane;
    private javax.swing.JScrollPane sameSetScrollPane;
    private javax.swing.JTable sameSetTable;
    private javax.swing.JScrollPane subSetScrollPane;
    private javax.swing.JTable subSetTable;
    // End of variables declaration//GEN-END:variables
}
